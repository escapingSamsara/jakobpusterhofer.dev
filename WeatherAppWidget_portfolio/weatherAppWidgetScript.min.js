window.addEventListener('load', function () {
  let e = {
      apiKey: 'bf1b245c3eb80c2eff8fdafb1d0ad17f',
      fetchWeather: function (e) {
        fetch(
          `https://api.openweathermap.org/data/2.5/weather?q=${e}&units=metric&lang=en&appid=${this.apiKey}`
        )
          .then((e) => e.json())
          .then((e) => this.displayWeather(e))
      },
      displayWeather: function (e) {
        const { name: t } = e,
          { icon: o, description: n } = e.weather[0],
          { temp: r, humidity: c } = e.main,
          { speed: a } = e.wind
        ;(document.querySelector('.city').innerText = `Weather in ${t}`),
          (document.querySelector(
            '.icon'
          ).src = `https://openweathermap.org/img/wn/${o}@2x.png`),
          (document.querySelector('.temp').innerText = `${Math.floor(r)}Â°C`),
          (document.querySelector('.description').innerText = `${n}`),
          (document.querySelector('.humidity').innerText = `${c} %`),
          (document.querySelector('.speed').innerText = `${a} km/h`),
          document.querySelector('.weather').classList.remove('loading'),
          (document.querySelector(
            '.card'
          ).style.backgroundImage = `linear-gradient(\n      180deg,\n      rgba(0, 0, 0, 0.75) 0%,\n      rgba(0,0 ,0 ,0.7) 50%,\n      rgba(0, 0, 0, 0.75) 100%\n    ), url(https://source.unsplash.com/featured/?${t})`)
      },
      search: function () {
        this.fetchWeather(document.querySelector('.search-bar').value)
      },
    },
    t = {
      reverseGeocode: function (t, o) {
        let n =
            'https://api.opencagedata.com/geocode/v1/json?key=e4dd8f89a9d8442e8853cf32ef36cf9f&q=' +
            encodeURIComponent(t + ',' + o) +
            '&pretty=1&no_annotations=1',
          r = new XMLHttpRequest()
        r.open('GET', n, !0),
          (r.onload = function () {
            if (200 === r.status) {
              let t = JSON.parse(r.responseText)
              e.fetchWeather(t.results[0].components.city)
            } else if (r.status <= 500) {
              console.log('unable to geocode! Response code: ' + r.status)
              let e = JSON.parse(r.responseText)
              console.log('error msg: ' + e.status.message)
            } else console.log('server error')
          }),
          (r.onerror = function () {
            console.log('unable to connect to server')
          }),
          r.send()
      },
      getLocation: function () {
        navigator.geolocation
          ? navigator.geolocation.getCurrentPosition(function (e) {
              t.reverseGeocode(e.coords.latitude, e.coords.longitude)
            }, console.error)
          : e.fetchWeather('Graz')
      },
    }
  document.querySelector('.search-btn').addEventListener('click', function () {
    e.search()
  }),
    document
      .querySelector('.search-bar')
      .addEventListener('keyup', function (t) {
        'Enter' == t.key && e.search()
      }),
    t.getLocation()
})
